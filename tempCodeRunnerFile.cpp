// Dependencies:
// https://github.com/catchorg/Catch2

// Generated by Qodo Gen

#include <catch2/catch_test_macros.hpp>
#include <cstdint>

TEST_CASE('Infixtopostfix(string)') {


    // Convert simple infix expression with operators and operands to postfix notation
    SECTION("should convert simple infix expression to postfix notation when given valid operators and operands") {
        string input = "a+b*c";
        string expected = "abc*+";
    
        string result = infixToPostfix(input);
    
        REQUIRE(result == expected);
    }

    // Empty input string
    SECTION("should return empty string when input is empty") {
        string input = "";
        string expected = "";
    
        string result = infixToPostfix(input);
    
        REQUIRE(result == expected);
    }

    // Process parentheses correctly in nested expressions
    SECTION("should convert nested infix expression to postfix notation when given valid operators and parentheses") {
        string input = "a*(b+c*(d-e))";
        string expected = "abcde-*+*";

        string result = infixToPostfix(input);

        REQUIRE(result == expected);
    }

    // Handle basic arithmetic operators (+, -, *, /) with correct precedence
    SECTION("should convert complex infix expression to postfix notation when given valid operators and operands") {
        string input = "a+b*(c^d-e)^(f+g*h)-i";
        string expected = "abcd^e-fgh*+^*+i-";

        string result = infixToPostfix(input);

        REQUIRE(result == expected);
    }

    // Convert single character operands (both alphabets and digits)
    SECTION('should convert single character operands to postfix when given only operands') {
        string input = "a1b2c3";
        string expected = "a1b2c3";

        string result = infixToPostfix(input);

        REQUIRE(result == expected);
    }

    // Handle multiple digit/character operands in sequence
    SECTION('should convert infix expression with multiple digit/character operands to postfix notation') {
        string input = "a1+b2*c3";
        string expected = "a1b2c3*+";

        string result = infixToPostfix(input);

        REQUIRE(result == expected);
    }
}